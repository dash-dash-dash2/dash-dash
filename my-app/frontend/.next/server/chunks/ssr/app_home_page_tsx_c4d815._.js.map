{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anas/Desktop/Senior%20phase/dash/dash-dash/my-app/frontend/app/home/page.tsx"],"sourcesContent":["// \"use client\";\r\n// import React from \"react\";\r\n// import Navbar from \"./Navbar\";\r\n\r\n// // Updated MenuItem Interface with Category\r\n// interface MenuItem {\r\n//   name: string;\r\n//   description: string;\r\n//   price: number;\r\n//   imageUrl: string;\r\n//   category: string; // New field for categorizing menu items\r\n// }\r\n\r\n// // MenuCard Component\r\n// const MenuCard: React.FC<MenuItem> = ({ name, description, price, imageUrl }) => {\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         borderRadius: \"12px\",\r\n//         backgroundColor: \"#ffffff\",\r\n//         boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\r\n//         overflow: \"hidden\",\r\n//         transition: \"transform 0.2s, box-shadow 0.2s\",\r\n//         cursor: \"pointer\",\r\n//       }}\r\n//       onMouseEnter={(e) => {\r\n//         e.currentTarget.style.transform = \"translateY(-4px)\";\r\n//         e.currentTarget.style.boxShadow = \"0 6px 12px rgba(0, 0, 0, 0.15)\";\r\n//       }}\r\n//       onMouseLeave={(e) => {\r\n//         e.currentTarget.style.transform = \"none\";\r\n//         e.currentTarget.style.boxShadow = \"0 4px 6px rgba(0, 0, 0, 0.1)\";\r\n//       }}\r\n//     >\r\n//       <img src={imageUrl} alt={name} style={{ width: \"100%\", height: \"160px\", objectFit: \"cover\" }} />\r\n//       <div style={{ padding: \"16px\" }}>\r\n//         <h3 style={{ fontSize: \"18px\", fontWeight: \"bold\", marginBottom: \"8px\" }}>{name}</h3>\r\n//         <p style={{ fontSize: \"14px\", color: \"#666666\", marginBottom: \"12px\" }}>{description}</p>\r\n//         <p style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"#FFB800\" }}>${price.toFixed(2)}</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Restaurant Component\r\n// const Restaurant: React.FC = () => {\r\n//   const menuItems: MenuItem[] = [\r\n//     {\r\n//       name: \"Cheeseburger\",\r\n//       description: \"Juicy beef patty with melted cheese, lettuce, and tomato.\",\r\n//       price: 9.99,\r\n//       imageUrl: \"https://via.placeholder.com/250x160\",\r\n//       category: \"Main Courses\", // Category added\r\n//     },\r\n//     {\r\n//       name: \"Margherita Pizza\",\r\n//       description: \"Classic pizza with fresh mozzarella, tomatoes, and basil.\",\r\n//       price: 12.99,\r\n//       imageUrl: \"https://via.placeholder.com/250x160\",\r\n//       category: \"Main Courses\", // Category added\r\n//     },\r\n//     {\r\n//       name: \"Caesar Salad\",\r\n//       description: \"Crisp romaine lettuce with Caesar dressing and croutons.\",\r\n//       price: 7.99,\r\n//       imageUrl: \"https://via.placeholder.com/250x160\",\r\n//       category: \"Starters\", // Category added\r\n//     },\r\n//     {\r\n//       name: \"Tiramisu\",\r\n//       description: \"Rich coffee-flavored dessert with layers of mascarpone cream.\",\r\n//       price: 6.99,\r\n//       imageUrl: \"https://via.placeholder.com/250x160\",\r\n//       category: \"Desserts\", // Category added\r\n//     },\r\n//   ];\r\n\r\n//   // Group menu items by category\r\n//   const groupedMenuItems = menuItems.reduce((acc, item) => {\r\n//     if (!acc[item.category]) {\r\n//       acc[item.category] = [];\r\n//     }\r\n//     acc[item.category].push(item);\r\n//     return acc;\r\n//   }, {} as Record<string, MenuItem[]>);\r\n\r\n//   return (\r\n//     <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"24px\", padding: \"24px\" }}>\r\n//       <Navbar />\r\n//       {Object.entries(groupedMenuItems).map(([category, items]) => (\r\n//         <div key={category}>\r\n//           <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", marginBottom: \"16px\" }}>{category}</h2>\r\n//           <div\r\n//             style={{\r\n//               display: \"grid\",\r\n//               gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\r\n//               gap: \"24px\",\r\n//             }}\r\n//           >\r\n//             {items.map((item, index) => (\r\n//               <MenuCard key={index} {...item} />\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Restaurant;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// \"use client\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import Navbar from \"./Navbar\";\r\n\r\n// // Updated MenuItem Interface with Category\r\n// interface MenuItem {\r\n//   name: string;\r\n//   description: string;\r\n//   price: number;\r\n//   imageUrl: string;\r\n//   category: string; // New field for categorizing menu items\r\n// }\r\n\r\n// // MenuCard Component\r\n// const MenuCard: React.FC<MenuItem> = ({ name, description, price, imageUrl }) => {\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         borderRadius: \"12px\",\r\n//         backgroundColor: \"#ffffff\",\r\n//         boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\r\n//         overflow: \"hidden\",\r\n//         transition: \"transform 0.2s, box-shadow 0.2s\",\r\n//         cursor: \"pointer\",\r\n//       }}\r\n//       onMouseEnter={(e) => {\r\n//         e.currentTarget.style.transform = \"translateY(-4px)\";\r\n//         e.currentTarget.style.boxShadow = \"0 6px 12px rgba(0, 0, 0, 0.15)\";\r\n//       }}\r\n//       onMouseLeave={(e) => {\r\n//         e.currentTarget.style.transform = \"none\";\r\n//         e.currentTarget.style.boxShadow = \"0 4px 6px rgba(0, 0, 0, 0.1)\";\r\n//       }}\r\n//     >\r\n//       <img src={imageUrl} alt={name} style={{ width: \"100%\", height: \"160px\", objectFit: \"cover\" }} />\r\n//       <div style={{ padding: \"16px\" }}>\r\n//         <h3 style={{ fontSize: \"18px\", fontWeight: \"bold\", marginBottom: \"8px\" }}>{name}</h3>\r\n//         <p style={{ fontSize: \"14px\", color: \"#666666\", marginBottom: \"12px\" }}>{description}</p>\r\n//         <p style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"#FFB800\" }}>${price.toFixed(2)}</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Restaurant Component\r\n// const Restaurant: React.FC = () => {\r\n//   const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\r\n//   const [loading, setLoading] = useState<boolean>(true);\r\n//   const [error, setError] = useState<string | null>(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchMenuItems = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"https://your-api-endpoint.com/menu-items\");\r\n//         setMenuItems(response.data);\r\n//         setLoading(false);\r\n//       } catch (err) {\r\n//         setError(\"Failed to fetch menu items\");\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchMenuItems();\r\n//   }, []);\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>{error}</div>;\r\n//   }\r\n\r\n//   // Group menu items by category\r\n//   const groupedMenuItems = menuItems.reduce((acc, item) => {\r\n//     if (!acc[item.category]) {\r\n//       acc[item.category] = [];\r\n//     }\r\n//     acc[item.category].push(item);\r\n//     return acc;\r\n//   }, {} as Record<string, MenuItem[]>);\r\n\r\n//   return (\r\n//     <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"24px\", padding: \"24px\" }}>\r\n//       <Navbar />\r\n//       {Object.entries(groupedMenuItems).map(([category, items]) => (\r\n//         <div key={category}>\r\n//           <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", marginBottom: \"16px\" }}>{category}</h2>\r\n//           <div\r\n//             style={{\r\n//               display: \"grid\",\r\n//               gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\r\n//               gap: \"24px\",\r\n//             }}\r\n//           >\r\n//             {items.map((item, index) => (\r\n//               <MenuCard key={index} {...item} />\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Restaurant;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}